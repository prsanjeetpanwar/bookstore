{"ast":null,"code":"var _jsxFileName = \"F:\\\\new_book\\\\src\\\\EditFrom.js\",\n    _s = $RefreshSig$();\n\n// EditForm.jsx\nimport React, { useState, useEffect } from 'react';\nimport { useParams, useNaviga } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst EditForm = () => {\n  _s();\n\n  const {\n    id\n  } = useParams();\n  const history = useNavigate(); // Replace this with actual data fetching logic\n\n  const [bookData, setBookData] = useState([// Sample data, replace with actual data fetching\n  {\n    id: '1',\n    volumeInfo: {\n      title: 'Sample Title',\n      authors: ['Author 1', 'Author 2'] // Add other fields as needed\n\n    }\n  } // Add more book items as needed\n  ]);\n  const [editedBook, setEditedBook] = useState({\n    title: '',\n    author: '' // Add other fields as needed\n\n  });\n  useEffect(() => {\n    // Fetch the book details by ID and set them to the state\n    const selectedBook = bookData.find(book => book.id === id);\n\n    if (selectedBook) {\n      var _selectedBook$volumeI;\n\n      setEditedBook({\n        title: selectedBook.volumeInfo.title,\n        author: (_selectedBook$volumeI = selectedBook.volumeInfo.authors) === null || _selectedBook$volumeI === void 0 ? void 0 : _selectedBook$volumeI.join(', ') // Set other fields accordingly\n\n      });\n    }\n  }, [id, bookData]);\n\n  const handleInputChange = e => {\n    setEditedBook({ ...editedBook,\n      [e.target.name]: e.target.value\n    });\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    history.push('/');\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Edit Book\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Title:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          name: \"title\",\n          value: editedBook.title,\n          onChange: handleInputChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Author:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          name: \"author\",\n          value: editedBook.author,\n          onChange: handleInputChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Save Changes\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 5\n  }, this);\n};\n\n_s(EditForm, \"Kh13hCbu+/5KleUVXW1raJ2jm5Q=\", true, function () {\n  return [useParams];\n});\n\n_c = EditForm;\nexport default EditForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"EditForm\");","map":{"version":3,"sources":["F:/new_book/src/EditFrom.js"],"names":["React","useState","useEffect","useParams","useNaviga","EditForm","id","history","useNavigate","bookData","setBookData","volumeInfo","title","authors","editedBook","setEditedBook","author","selectedBook","find","book","join","handleInputChange","e","target","name","value","handleSubmit","preventDefault","push"],"mappings":";;;AAAA;AACA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAASC,SAAT,EAAoBC,SAApB,QAAqC,kBAArC;;;AAEA,MAAMC,QAAQ,GAAG,MAAM;AAAA;;AACrB,QAAM;AAAEC,IAAAA;AAAF,MAASH,SAAS,EAAxB;AACA,QAAMI,OAAO,GAAGC,WAAW,EAA3B,CAFqB,CAIrB;;AACA,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BT,QAAQ,CAAC,CACvC;AACA;AACEK,IAAAA,EAAE,EAAE,GADN;AAEEK,IAAAA,UAAU,EAAE;AACVC,MAAAA,KAAK,EAAE,cADG;AAEVC,MAAAA,OAAO,EAAE,CAAC,UAAD,EAAa,UAAb,CAFC,CAGV;;AAHU;AAFd,GAFuC,CAUvC;AAVuC,GAAD,CAAxC;AAaA,QAAM,CAACC,UAAD,EAAaC,aAAb,IAA8Bd,QAAQ,CAAC;AAC3CW,IAAAA,KAAK,EAAE,EADoC;AAE3CI,IAAAA,MAAM,EAAE,EAFmC,CAG3C;;AAH2C,GAAD,CAA5C;AAMAd,EAAAA,SAAS,CAAC,MAAM;AACd;AACA,UAAMe,YAAY,GAAGR,QAAQ,CAACS,IAAT,CAAeC,IAAD,IAAUA,IAAI,CAACb,EAAL,KAAYA,EAApC,CAArB;;AACA,QAAIW,YAAJ,EAAkB;AAAA;;AAChBF,MAAAA,aAAa,CAAC;AACZH,QAAAA,KAAK,EAAEK,YAAY,CAACN,UAAb,CAAwBC,KADnB;AAEZI,QAAAA,MAAM,2BAAEC,YAAY,CAACN,UAAb,CAAwBE,OAA1B,0DAAE,sBAAiCO,IAAjC,CAAsC,IAAtC,CAFI,CAGZ;;AAHY,OAAD,CAAb;AAKD;AACF,GAVQ,EAUN,CAACd,EAAD,EAAKG,QAAL,CAVM,CAAT;;AAYA,QAAMY,iBAAiB,GAAIC,CAAD,IAAO;AAC/BP,IAAAA,aAAa,CAAC,EACZ,GAAGD,UADS;AAEZ,OAACQ,CAAC,CAACC,MAAF,CAASC,IAAV,GAAiBF,CAAC,CAACC,MAAF,CAASE;AAFd,KAAD,CAAb;AAID,GALD;;AAOA,QAAMC,YAAY,GAAIJ,CAAD,IAAO;AAC1BA,IAAAA,CAAC,CAACK,cAAF;AAEApB,IAAAA,OAAO,CAACqB,IAAR,CAAa,GAAb;AACD,GAJD;;AAMA,sBACE;AAAA,4BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AAAM,MAAA,QAAQ,EAAEF,YAAhB;AAAA,8BACE;AAAA,gCACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE;AACE,UAAA,IAAI,EAAC,MADP;AAEE,UAAA,IAAI,EAAC,OAFP;AAGE,UAAA,KAAK,EAAEZ,UAAU,CAACF,KAHpB;AAIE,UAAA,QAAQ,EAAES;AAJZ;AAAA;AAAA;AAAA;AAAA,gBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAUE;AAAA,gCACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE;AACE,UAAA,IAAI,EAAC,MADP;AAEE,UAAA,IAAI,EAAC,QAFP;AAGE,UAAA,KAAK,EAAEP,UAAU,CAACE,MAHpB;AAIE,UAAA,QAAQ,EAAEK;AAJZ;AAAA;AAAA;AAAA;AAAA,gBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,cAVF,eAoBE;AAAQ,QAAA,IAAI,EAAC,QAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cApBF;AAAA;AAAA;AAAA;AAAA;AAAA,YAFF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AA2BD,CA5ED;;GAAMhB,Q;UACWF,S;;;KADXE,Q;AA8EN,eAAeA,QAAf","sourcesContent":["// EditForm.jsx\r\nimport React, { useState, useEffect } from 'react';\r\nimport { useParams, useNaviga } from 'react-router-dom';\r\n\r\nconst EditForm = () => {\r\n  const { id } = useParams();\r\n  const history = useNavigate();\r\n\r\n  // Replace this with actual data fetching logic\r\n  const [bookData, setBookData] = useState([\r\n    // Sample data, replace with actual data fetching\r\n    {\r\n      id: '1',\r\n      volumeInfo: {\r\n        title: 'Sample Title',\r\n        authors: ['Author 1', 'Author 2'],\r\n        // Add other fields as needed\r\n      },\r\n    },\r\n    // Add more book items as needed\r\n  ]);\r\n\r\n  const [editedBook, setEditedBook] = useState({\r\n    title: '',\r\n    author: '',\r\n    // Add other fields as needed\r\n  });\r\n\r\n  useEffect(() => {\r\n    // Fetch the book details by ID and set them to the state\r\n    const selectedBook = bookData.find((book) => book.id === id);\r\n    if (selectedBook) {\r\n      setEditedBook({\r\n        title: selectedBook.volumeInfo.title,\r\n        author: selectedBook.volumeInfo.authors?.join(', '),\r\n        // Set other fields accordingly\r\n      });\r\n    }\r\n  }, [id, bookData]);\r\n\r\n  const handleInputChange = (e) => {\r\n    setEditedBook({\r\n      ...editedBook,\r\n      [e.target.name]: e.target.value,\r\n    });\r\n  };\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n   \r\n    history.push('/');\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h2>Edit Book</h2>\r\n      <form onSubmit={handleSubmit}>\r\n        <div>\r\n          <label>Title:</label>\r\n          <input\r\n            type=\"text\"\r\n            name=\"title\"\r\n            value={editedBook.title}\r\n            onChange={handleInputChange}\r\n          />\r\n        </div>\r\n        <div>\r\n          <label>Author:</label>\r\n          <input\r\n            type=\"text\"\r\n            name=\"author\"\r\n            value={editedBook.author}\r\n            onChange={handleInputChange}\r\n          />\r\n        </div>\r\n\r\n        <button type=\"submit\">Save Changes</button>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default EditForm;\r\n"]},"metadata":{},"sourceType":"module"}