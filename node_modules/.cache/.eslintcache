[{"F:\\new_book\\src\\index.js":"1","F:\\new_book\\src\\App.js":"2","F:\\new_book\\src\\Components\\Main.js":"3","F:\\new_book\\src\\Components\\Card.js":"4","F:\\new_book\\src\\Components\\Modal.js":"5"},{"size":479,"mtime":1702609789450,"results":"6","hashOfConfig":"7"},{"size":169,"mtime":1702609776023,"results":"8","hashOfConfig":"7"},{"size":1739,"mtime":1702609704496,"results":"9","hashOfConfig":"7"},{"size":2311,"mtime":1702610515625,"results":"10","hashOfConfig":"7"},{"size":1832,"mtime":1702610447059,"results":"11","hashOfConfig":"7"},{"filePath":"12","messages":"13","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"e7x1ax",{"filePath":"14","messages":"15","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"16","messages":"17","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"18","messages":"19","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"20","messages":"21","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"F:\\new_book\\src\\index.js",[],"F:\\new_book\\src\\App.js",[],"F:\\new_book\\src\\Components\\Main.js",["22"],"F:\\new_book\\src\\Components\\Card.js",["23","24"],"F:\\new_book\\src\\Components\\Modal.js",[],{"ruleId":"25","severity":1,"message":"26","line":11,"column":121,"nodeType":"27","messageId":"28","endLine":11,"endColumn":122},{"ruleId":"29","severity":1,"message":"30","line":4,"column":10,"nodeType":"31","messageId":"32","endLine":4,"endColumn":14},{"ruleId":"33","severity":1,"message":"34","line":15,"column":24,"nodeType":"35","messageId":"36","endLine":15,"endColumn":26},"no-useless-concat","Unexpected string concatenation of literals.","BinaryExpression","unexpectedConcat","no-unused-vars","'Link' is defined but never used.","Identifier","unusedVar","array-callback-return","Array.prototype.map() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd"]